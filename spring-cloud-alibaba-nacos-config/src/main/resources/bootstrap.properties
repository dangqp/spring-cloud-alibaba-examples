#和配置中心配置文件名称一致
spring.application.name=nacos-config
server.port=8083
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.server-addr=127.0.0.1:8849
# spring.application.name与nacos配置不一样时可以使用下面配置指定要加载的配置文件
#spring.cloud.nacos.config.prefix=nacos-config

########################多环境配置########################
#配置文件文件名称命名方式
#多环境配置配置文件${spring.application.name}-${spring.profiles.active}.properties
#spring.profiles.active=dev
#spring.cloud.nacos.config.prefix=${spring.application.name}-${spring.profiles.active}
################################################
spring.cloud.nacos.config.file-extension=properties

################################################
#利用GROUP来管理配置文件
#spring.cloud.nacos.config.group=DEV_GROUP
################################################

################################################
#加载多个配置
#A: 通过spring.cloud.nacos.config.shared-dataids定义的共享配置
#B: 通过spring.cloud.nacos.config.ext-config[n]定义的加载配置
#C: 通过内部规则（spring.cloud.nacos.config.prefix、spring.cloud.nacos.config.file-extension、spring.cloud.nacos.config.group这几个参数）拼接出来的配置
# 后面加载的配置会覆盖之前加载的配置，所以优先级关系是：A < B < C

#spring.cloud.nacos.config.ext-config[0].data-id=nacos-config-dev.properties
#spring.cloud.nacos.config.ext-config[0].group=DEFAULT_GROUP
#spring.cloud.nacos.config.ext-config[0].refresh=true
#spring.cloud.nacos.config.ext-config[1].data-id=nacos-config-pro.properties
#spring.cloud.nacos.config.ext-config[1].group=DEFAULT_GROUP
#spring.cloud.nacos.config.ext-config[1].refresh=true

#spring.cloud.nacos.config.shared-dataids=nacos-config-dev.properties,nacos-config-pro.properties
#spring.cloud.nacos.config.refreshable-dataids=nacos-config-dev.properties,nacos-config-pro.properties

################################################



###############################################
#注意namespace的配置不是使用名称，而是使用Namespace的ID  制定配置的环境，此处配置的开发环境，
# 也可不配置，默认加载public下的配置文件
#spring.cloud.nacos.config.namespace=8f9b8d6a-bef4-4e55-a268-5d240a2169df
###############################################


